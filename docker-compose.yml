services:

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - LOG_LEVEL=debug
      - CAPTCHA_SOLVER=none
      - BROWSER_TIMEOUT=120000
      - BROWSER_ARGS=--no-sandbox,--disable-dev-shm-usage,--disable-gpu
      - PLAYWRIGHT_CHROMIUM_PATH=/usr/bin/chromium-browser

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - prowlarr_config:/config
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - sonarr_config:/config
      - ${MEDIA_DIR}:/media
    restart: unless-stopped

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: rpi
    ports:
      - 19999:19999  # Port d'accès au dashboard
    cap_add:
      - SYS_PTRACE   # Nécessaire pour certaines métriques système
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /run/dbus:/run/dbus:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
    environment:
      - DO_NOT_TRACK=1   # Désactive la télémétrie vers Netdata Cloud
      - DOCKER_HOST=unix:///var/run/docker.sock # Pour activer le plugin Docker
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    network_mode: bridge
    ports:
      - "${JELLYFIN_PORT}:8096"
    environment:
      - TZ=${TZ}
    volumes:
      - ${MEDIA_DIR}:/media
      - jellyfin_config:/config
      - jellyfin_cache:/cache

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - ${QBIT_WEBUI_PORT}:${QBIT_WEBUI_PORT}
      - 8989:8989
      - 9696:9696
      - 8191:8191
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - GLUETUN__HTTP_CONTROL_SERVER__USER=${GLUETUN_USER}
      - GLUETUN__HTTP_CONTROL_SERVER__PASSWORD=${GLUETUN_PASSWORD}
      - PORT_FORWARDING=on
    restart: unless-stopped

  port-sync:
    container_name: port-sync
    build:
      context: .
      dockerfile: docker/port_sync/Dockerfile
    depends_on:
      - gluetun
    environment:
      - QBIT_HOST=http://localhost:${QBIT_WEBUI_PORT}
      - QBIT_USER=${QBIT_USER}
      - QBIT_PASS=${QBIT_PASSWORD}
    volumes:
      - ./qbittorrent-config:/config
    network_mode: "service:gluetun"
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: "service:gluetun"
    volumes:
      - ./qbittorrent-config:/config
      - ${MEDIA_DIR}:/media
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBIT_WEBUI_PORT}
      - WEBUI_USERNAME=${QBIT_USER}
      - WEBUI_PASSWORD=${QBIT_PASSWORD}
    restart: unless-stopped

volumes:
  prowlarr_config:
  sonarr_config:
  jellyfin_config:
  jellyfin_cache:
  netdataconfig:
  netdatalib:
  netdatacache:
