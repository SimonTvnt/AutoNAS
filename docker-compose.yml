services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    network_mode: bridge
    ports:
      - "${JELLYFIN_PORT}:8096"  # HTTP (Web UI)
    environment:
      - TZ=${TZ}
    volumes:
      - ${MEDIA_DIR}:/media
      - jellyfin_config:/config
      - jellyfin_cache:/cache

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - ${QBIT_WEBUI_PORT}:8090
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - GLUETUN__HTTP_CONTROL_SERVER__USER=${GLUETUN_USER}
      - GLUETUN__HTTP_CONTROL_SERVER__PASSWORD=${GLUETUN_PASSWORD}
      - PORT_FORWARDING=on
    restart: unless-stopped

  port-sync:
    container_name: port-sync
    build:
      context: .
      dockerfile: docker/port_sync/Dockerfile
    depends_on:
      - gluetun
    environment:
      - QBIT_HOST=http://localhost:${QBIT_WEBUI_PORT}
      - QBIT_USER=${QBIT_USER}
      - QBIT_PASS=${QBIT_PASSWORD}
    volumes:
      - ./qbittorrent-config:/config
    network_mode: "service:gluetun"
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: "service:gluetun"
    volumes:
      - ./qbittorrent-config:/config
      - ${MEDIA_DIR}:${MEDIA_DIR}
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBIT_WEBUI_PORT}
      - WEBUI_USERNAME=${QBIT_USER}
      - WEBUI_PASSWORD=${QBIT_PASSWORD}
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped

volumes:
  jellyfin_config:
  jellyfin_cache: